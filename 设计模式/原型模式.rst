.. _原型模式:

原型模式
=================

模型动机
---------------
* 在软件系统中，经常面临着“某些结构复杂的对象”的创建工作；由于需求的变化，这些对象经常面临着剧烈的变化，
  但是它们却拥有比较稳定的接口。
* 如何应对这种变化？如何向“客户程序(使用这些对象的程序)”隔离出“这些易变对象”，从而使得
  “依赖这些易变对象的客户程序”不随着需求改变而改变

模式定义
--------------
使用原型实例指定创建对象的种类，然后通过拷贝这些原型来创建新的对象

代码分析
-------------------
.. literalinclude:: code/Prototype/Prototype2.cpp
    :language: cpp


总结
-------------
* Prototype模式同样用于隔离类对象的使用和具体类型(易变类)之间的耦合关系，
  它同样要求这些易变类拥有稳定的接口
* Prototype模式对于“如何创建易变类的实体对象”采用原型克隆的方法来做，它使得我们可以非常灵活地动态创建拥有某些稳定接口的
  新对象--所需工作仅仅是注册一个新类的对象(即原型)，然后在使用需要的地方Clone
* 注意深拷贝和浅拷贝的实现条件和实现规范，确保实现正确的对象状态拷贝