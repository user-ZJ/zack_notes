贪心算法
===========================

跳跃游戏
-------------------
给你一个非负整数数组 nums ，你最初位于数组的 第一个下标 。数组中的每个元素代表你在该位置可以跳跃的最大长度。

判断你是否能够到达最后一个下标，如果可以，返回 true ；否则，返回 false 。

.. tip:: 

    初始化最远位置为 0，然后遍历数组，如果当前位置能到达，并且当前位置+跳数>最远位置，就更新最远位置。最后比较最远位置和数组长度。

    时间复杂度 O(n)，空间复杂度 O(1)。

.. literalinclude:: code/跳跃游戏.cpp
    :language: cpp


跳跃游戏II
------------------
给你一个非负整数数组 nums ，你最初位于数组的 第一个下标 。数组中的每个元素代表你在该位置可以跳跃的最大长度。

返回到达最后一个下标的最小跳跃次数。生成的测试用例可以到达最后一个下标。

.. tip:: 

    我们维护当前能够到达的最大下标位置，记为边界。我们从左到右遍历数组，到达边界时，更新边界并将跳跃次数增加1

    在遍历数组时，我们不访问最后一个元素，这是因为在访问最后一个元素之前，我们的边界一定大于等于最后一个位置，否则就无法跳到最后一个位置了。
    如果访问最后一个元素，在边界正好为最后一个位置的情况下，我们会增加一次「不必要的跳跃次数」，因此我们不必访问最后一个元素。

.. literalinclude:: code/跳跃游戏2.cpp
    :language: cpp
